[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "standardized-modules-framework"
version = "1.1.0"
description = "AI-optimized module scaffolding framework for rapid development"
authors = [
    {name = "Standardized Modules Framework", email = "contact@standardized-modules.dev"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
keywords = ["scaffolding", "framework", "ai", "automation", "modules", "development"]

dependencies = [
    "click>=8.0.0",
    "jinja2>=3.0.0", 
    "pyyaml>=6.0.0",
    "aiohttp>=3.8.0",
    "mcp>=1.0.0",
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
    "psutil>=5.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.6.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
]
cli = ["click>=8.0.0"]
async = ["aiohttp>=3.8.0"]
all = [
    "click>=8.0.0",
    "jinja2>=3.0.0", 
    "pyyaml>=6.0.0",
    "aiohttp>=3.8.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.6.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
]

[project.scripts]
sm = "standardized_modules.cli.commands:cli"

[project.urls]
"Homepage" = "https://github.com/standardized-modules/framework"
"Bug Reports" = "https://github.com/standardized-modules/framework/issues"
"Source" = "https://github.com/standardized-modules/framework"
"Documentation" = "https://standardized-modules.dev/docs"

[tool.setuptools]
packages = ["standardized_modules"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yml", "*.yaml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --tb=short"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".tox",
    ".venv",
]
