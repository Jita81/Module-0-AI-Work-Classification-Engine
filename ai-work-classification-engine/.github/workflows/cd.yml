name: CD Pipeline

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/ai-work-classification-engine

jobs:
  deploy-staging:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Deploy to EKS staging
      run: |
        aws eks update-kubeconfig --region us-east-1 --name staging-cluster
        kubectl apply -f k8s/
        kubectl set image deployment/ai-work-classification-engine ai-work-classification-engine=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-${{ github.sha }}
        kubectl rollout status deployment/ai-work-classification-engine --timeout=300s

  deploy-production:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Deploy to EKS production
      run: |
        aws eks update-kubeconfig --region us-east-1 --name production-cluster
        kubectl apply -f k8s/
        kubectl set image deployment/ai-work-classification-engine ai-work-classification-engine=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
        kubectl rollout status deployment/ai-work-classification-engine --timeout=300s
        
    - name: Run smoke tests
      run: |
        # Add smoke tests here
        curl -f https://ai-work-classification-engine.yourdomain.com/health
